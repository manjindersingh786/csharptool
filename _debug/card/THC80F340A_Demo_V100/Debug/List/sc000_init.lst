


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ; On reset, the ARM core starts up in Supervisor (SVC) m
                       ode, in ARM state, with IRQ and FIQ disabled.
    4 00000000         
    5 00000000                 PRESERVE8
    6 00000000                 AREA             Init, CODE, READONLY
    7 00000000                 GET              THC80ASM.H
    1 00000000         
    2 00000000         ; --- Standard definitions of mode bits and interrupt (I
                        & F) flags in PSRs
    3 00000000 00000010 
                       Mode_USR
                               EQU              0x10
    4 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
    5 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
    6 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
    7 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
    8 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
    9 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F        ; available on ARM 
                                                            Arch 4 and later
   10 00000000         
   11 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   12 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   13 00000000         
   14 00000000         ; --- Disable MPU first
   15 00000000 FFFFFFFE 
                       MPUDisable
                               EQU              0xFFFFFFFE  ; Disable MPU
   16 00000000         
   17 00000000         ; --- System memory locations
   18 00000000 20000000 
                       RAM_Start
                               EQU              0x20000000  ; For THC8000
   19 00000000 20002A00 
                       RAM_Limit
                               EQU              0x20002A00  ; For THC80F17BD_V4
                                                            0
   20 00000000         ;SVC_Stack       EQU     RAM_Limit         ; followed by
                        SVC stack
   21 00000000         ;TMR_IRQ_Stack EQU     SVC_Stack-48
   22 00000000         ;FLASH_IRQ_Stack EQU     SVC_Stack-40
   23 00000000         ;DES_IRQ_Stack EQU     SVC_Stack-40



ARM Macro Assembler    Page 2 


   24 00000000         ;FIQ_Stack       EQU     DES_IRQ_Stack-64   ; 64 byte IR
                       Q stack,followed by FIQ stack
   25 00000000         ;ABT_Stack  EQU  FIQ_Stack-64  ; 64 bytes of FIQ stack f
                       ollowed by Abort Stack
   26 00000000         ; add UNDEF_Stack here if you need them
   27 00000000         ;SYS_Stack       EQU     ABT_Stack-128       ; 128 byte 
                       ABT stack,followed by SYS stack
   28 00000000         
   29 00000000         ;Abort_Flag  EQU  ABT_Stack-64     ; Abort flag address
   30 00000000         
   31 00000000 00000000 
                       Flash_Start
                               EQU              0x000000    ; Base address of f
                                                            lash
   32 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200  ; 1KB stack
   33 00000000 00000000 
                       Heap_Size
                               EQU              0x00000000  ; 1KB heap
   34 00000000         
   35 00000000                 IMPORT           ||ZISection$$Table$$Limit||
   36 00000000                 IMPORT           ||Image$$RAM$$ZI$$Base||
   37 00000000                 IMPORT           ||Image$$RAM$$ZI$$Limit||
   38 00000000         
   39 00000000                 END
    8 00000000         
    9 00000000         ;  ENTRY
   10 00000000                 EXPORT           Reset_Handler
   11 00000000                 IMPORT           __initial_sp
   12 00000000         
   13 00000000         Reset_Handler
   14 00000000         
   15 00000000         
   16 00000000         ; --- Change clock to 30MHz
   17 00000000         ; LDR   r0, = 0x40000010
   18 00000000         ; LDR   r1, = 0x00000080
   19 00000000         ; STR   r1, [r0, #0]
   20 00000000         
   21 00000000         ; --- Initialise memory system,RW & ZI
   22 00000000 B41F            PUSH             {r0 - r4}   ; For Cortex-M0
   23 00000002 4819            LDR              r0, = ||ZISection$$Table$$Limit
||
   24 00000004 4919            LDR              r1, = RAM_Start ; RAM start
   25 00000006 4B1A            LDR              r3, = ||Image$$RAM$$ZI$$Base||
   26 00000008 4C1A            LDR              r4, = 0
   27 0000000A         
   28 0000000A 4B19            LDR              r3, = ||Image$$RAM$$ZI$$Base||
   29 0000000C         
   30 0000000C 4299            CMP              r1, r3      ; There is no RW
   31 0000000E D010            BEQ              %F1
   32 00000010         
   33 00000010 4299    0       CMP              r1, r3
   34 00000012 D00E            BEQ              %F1
   35 00000014 F3EF 8200       MRS              r2, APSR    ; For Cortex-M0,to 
                                                            save APSR in the st
                                                            ack
   36 00000018 B404            PUSH             {r2}
   37 0000001A         



ARM Macro Assembler    Page 3 


   38 0000001A 5902            LDR              r2, [r0, r4]
   39 0000001C 510A            STR              r2, [r1, r4]
   40 0000001E 1D00            ADDS             r0, r0, #4  ; Source added with
                                                             4
   41 00000020 1D09            ADDS             r1, r1, #4  ; Destination added
                                                             with 4
   42 00000022         
   43 00000022 BC04            POP              {r2}
   44 00000024 F382 8800       MSR              APSR, r2
   45 00000028 D1F2            BNE              %B0
   46 0000002A         
   47 0000002A 4913            LDR              r1, = 0x01000200
   48 0000002C 400A            ANDS             r2, r2, r1  ; Bit 24 and 9 of A
                                                            PSR reserved,other 
                                                            bits cleared
   49 0000002E F382 8800       MSR              APSR, r2
   50 00000032         
   51 00000032 4912    1       LDR              r1, = ||Image$$RAM$$ZI$$Limit||
   52 00000034 4A12            LDR              r2, = Stack_Size
   53 00000036 1A89            SUBS             r1, r1, r2
   54 00000038 4A0E            LDR              r2, = Heap_Size
   55 0000003A 1A89            SUBS             r1, r1, r2
   56 0000003C 4A0D            LDR              r2, = 0
   57 0000003E 4C0D            LDR              r4, = 0
   58 00000040         
   59 00000040 428B    2       CMP              r3, r1
   60 00000042 D009            BEQ              JumpToMain
   61 00000044 F3EF 8000       MRS              r0, APSR    ; For Cortex-M0,to 
                                                            save APSR in the st
                                                            ack
   62 00000048 B401            PUSH             {r0}
   63 0000004A 511A            STR              r2, [r3, r4]
   64 0000004C 1D1B            ADDS             r3, r3, #4  ; Destination added
                                                             with 4
   65 0000004E BC01            POP              {r0}
   66 00000050 F380 8800       MSR              APSR, r0
   67 00000054 D1F4            BNE              %B2
   68 00000056         
   69 00000056 BC1F            POP              {r0 - r4}   ; For Cortex-M0 
   70 00000058         
   71 00000058         ; Branch to real main function BLmain() instead of __mai
                       n provided by lib
   72 00000058                 IMPORT           Testmain
   73 00000058         
   74 00000058         ; --- Now enter the C code
   75 00000058         JumpToMain
   76 00000058         
   77 00000058         ; Enable interrupt of sc000
   78 00000058 480A            LDR              R0, = 0xE000E100 ; Interrupt Se
                                                            t-Enable register,I
                                                            SER
   79 0000005A 490B            LDR              R1, = 0xFFFFFFFF
   80 0000005C 6001            STR              R1, [R0, #0] ; All interrupt en
                                                            abled
   81 0000005E         
   82 0000005E 4805            LDR              R0, =0x00000000
   83 00000060 F380 8810       MSR              PRIMASK,  R0
   84 00000064         
   85 00000064         ; B Testmain       ; note use B not BL, because an appli



ARM Macro Assembler    Page 4 


                       cation will never return this way
   86 00000064 4809            LDR              R0, =Testmain
   87 00000066 4700            BX               R0
   88 00000068         
   89 00000068                 END
              00000000 
              20000000 
              00000000 
              00000000 
              01000200 
              00000000 
              00000200 
              E000E100 
              FFFFFFFF 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M0 --depend=.\debug\output\sc000_init
.d -o.\debug\output\sc000_init.o -I.\RTE\_THC80F340A_DEMO -IC:\Keil_v5\Packs\AR
M\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Keil_v5\Packs\ARM\CMSIS\5.9.0\Device\ARM\
ARMCM0\Include --predefine="__UVISION_VERSION SETA 537" --predefine="_RTE_ SETA
 1" --predefine="ARMCM0 SETA 1" --predefine="_RTE_ SETA 1" --list=.\debug\list\
sc000_init.lst SC000_SYS\SC000_Init.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

 00000010

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000032

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
 00000040

Symbol: 
   Definitions
      None
   Uses
      None
Warning:  undefinedComment:  unused
Init 00000000

Symbol: Init
   Definitions
      At line 6 in file SC000_SYS\SC000_Init.s
   Uses
      None
Comment: Init unused
JumpToMain 00000058

Symbol: JumpToMain
   Definitions
      At line 75 in file SC000_SYS\SC000_Init.s
   Uses
      At line 60 in file SC000_SYS\SC000_Init.s
Comment: JumpToMain used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 13 in file SC000_SYS\SC000_Init.s
   Uses
      At line 10 in file SC000_SYS\SC000_Init.s
Comment: Reset_Handler used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 12 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: F_Bit unused
Flash_Start 00000000

Symbol: Flash_Start
   Definitions
      At line 31 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Flash_Start unused
Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 33 in file SC000_SYS\THC80ASM.H
   Uses
      At line 54 in file SC000_SYS\SC000_Init.s
Comment: Heap_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 11 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: I_Bit unused
MPUDisable FFFFFFFE

Symbol: MPUDisable
   Definitions
      At line 15 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: MPUDisable unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 7 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_ABT unused
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 4 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_FIQ unused
Mode_IRQ 00000012

Symbol: Mode_IRQ



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 5 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_IRQ unused
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 6 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_SVC unused
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 9 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 8 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_UND unused
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 3 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: Mode_USR unused
RAM_Limit 20002A00

Symbol: RAM_Limit
   Definitions
      At line 19 in file SC000_SYS\THC80ASM.H
   Uses
      None
Comment: RAM_Limit unused
RAM_Start 20000000

Symbol: RAM_Start
   Definitions
      At line 18 in file SC000_SYS\THC80ASM.H
   Uses
      At line 24 in file SC000_SYS\SC000_Init.s
Comment: RAM_Start used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 32 in file SC000_SYS\THC80ASM.H
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 52 in file SC000_SYS\SC000_Init.s
Comment: Stack_Size used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Testmain 00000000

Symbol: Testmain
   Definitions
      At line 72 in file SC000_SYS\SC000_Init.s
   Uses
      At line 86 in file SC000_SYS\SC000_Init.s
Comment: Testmain used once
__initial_sp 00000000

Symbol: __initial_sp
   Definitions
      At line 11 in file SC000_SYS\SC000_Init.s
   Uses
      None
Comment: __initial_sp unused
|Image$$RAM$$ZI$$Base| 00000000

Symbol: |Image$$RAM$$ZI$$Base|
   Definitions
      At line 36 in file SC000_SYS\THC80ASM.H
   Uses
      At line 25 in file SC000_SYS\SC000_Init.s
      At line 28 in file SC000_SYS\SC000_Init.s

|Image$$RAM$$ZI$$Limit| 00000000

Symbol: |Image$$RAM$$ZI$$Limit|
   Definitions
      At line 37 in file SC000_SYS\THC80ASM.H
   Uses
      At line 51 in file SC000_SYS\SC000_Init.s
Comment: |Image$$RAM$$ZI$$Limit| used once
|ZISection$$Table$$Limit| 00000000

Symbol: |ZISection$$Table$$Limit|
   Definitions
      At line 35 in file SC000_SYS\THC80ASM.H
   Uses
      At line 23 in file SC000_SYS\SC000_Init.s
Comment: |ZISection$$Table$$Limit| used once
5 symbols
361 symbols in table
